name: Deploy FastAPI to Azure VM

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run tests
        run: pytest tests/ -v

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

      - name: Deploy to Azure VM
        env:
          SERVER_USER: ${{ secrets.SSH_USERNAME }}
          SERVER_IP: ${{ secrets.SSH_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP << 'EOF'
            cd ~/HNGx-fastapi-book-project
            git pull origin main

            # Ensure virtual environment and dependencies
            source venv/bin/activate || python3 -m venv venv && source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Stop running Docker container if exists
            docker stop fastapi-app || true
            docker rm fastapi-app || true

            # Build and run Docker container
            docker build -t fastapi-app .
            docker run -d --name fastapi-app -p 8000:8000 --env-file .env fastapi-app

            # Restart FastAPI app (if using systemd)
            sudo systemctl restart fastapi-app || true
          EOF

      - name: Verify deployment
        run: curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SSH_HOST }}:8000/api/v1/books/1

